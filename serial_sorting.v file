`timescale 1ns / 1ps

module serial_sortingv(
input [15:0] in,
input reset,clk,
output [15:0]  A_1,A_2,A_3,A_4,A_5,B_5
    );
    wire gt_1,gt_2,gt_3,gt_4,gt_5,y_1,y_2,y_3,y_4;
    wire [15:0] p_1,p_2,p_3,p_4,t_1,t_2,t_3,t_4;
    mux mux_1(.am(A_1),.bm(t_1),.sel(gt_1),.out_m(p_1));
    BN_block BN_1(.in(in),.reset(reset),.clk(clk),.a(A_1),.b(t_1),.gt(gt_1));
    dff df_0(.m(reset),.n(y_1),.clk(clk));
    
    mux mux_2(.am(A_2),.bm(t_2),.sel(gt_2),.out_m(p_2));
    BN_block BN_2(.in(p_1),.reset(y_1),.clk(clk),.a(A_2),.b(t_2),.gt(gt_2));
    dff df_1(.m(y_1),.n(y_2),.clk(clk));
    
    mux mux_3(.am(A_3),.bm(t_3),.sel(gt_3),.out_m(p_3));
    BN_block BN_3(.in(p_2),.reset(y_2),.clk(clk),.a(A_3),.b(t_3),.gt(gt_3));
    dff df_2(.m(y_2),.n(y_3),.clk(clk));
    
    mux mux_4(.am(A_4),.bm(t_4),.sel(gt_4),.out_m(p_4));
    BN_block BN_4(.in(p_3),.reset(y_3),.clk(clk),.a(A_4),.b(t_4),.gt(gt_4));
    dff df_3(.m(y_3),.n(y_4),.clk(clk)); 
    
    BN_block BN_5(.in(p_4),.reset(y_4),.clk(clk),.a(A_5),.b(B_5),.gt(gt_5));  
    
endmodule

module BN_block(
input [15:0] in,
input reset,clk,
output gt,
output [15:0] a,b
);
wire [15:0] out_m;
wire lt,eq;
regist rg0(.p(in),.reset(reset),.clk(clk),.q(b));
regist rg1(.p(out_m),.reset(reset),.clk(clk),.q(a));
comparator cmp0(.a(a),.b(b),.gt(gt),.lt(lt),.eq(eq));
mux mux_0(.am(a),.bm(b),.sel(lt),.out_m(out_m));
endmodule

module mux(
input [15:0] am,bm,
input sel,
output [15:0] out_m
);
assign out_m = sel?bm:am;
endmodule

module regist(
input [15:0] p,
input reset,clk,
output reg [15:0] q
);
always @(posedge clk)begin
if(reset)begin
q<=16'h0000;
end
else begin
q<=p;
end
end
endmodule
module comparator(
input [15:0]a,b,
output reg gt,lt,eq);
always @(*) begin
  if (a < b) begin
    lt <= 1'b1; gt <= 1'b0; eq <= 1'b0;
  end else if (a > b) begin
    lt <= 1'b0; gt <= 1'b1; eq <= 1'b0;
  end else begin
    lt <= 1'b0; gt <= 1'b0; eq <= 1'b1;
  end
end
endmodule
module dff(
input m,
input clk,
output reg n
);
always @(posedge clk)begin
n<=m;
end
endmodule

